name: Testes e Atualiza√ß√£o do README

on:
  push:
    branches: ["mainfra/observability-sprint1", "main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache de pacotes pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest black isort

      - name: Criar arquivo de credenciais do Firebase (decodificado de base64)
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS_BASE64 }}" | base64 --decode > $HOME/firebase.json
        shell: bash

      - name: Definir vari√°vel GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase.json" >> $GITHUB_ENV

      - name: Verificar vari√°veis de ambiente obrigat√≥rias
        run: |
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "‚ùå Vari√°vel GEMINI_API_KEY n√£o est√° definida!"
            exit 1
          else
            echo "‚úÖ Vari√°vel GEMINI_API_KEY est√° definida."
          fi
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}

      - name: Rodar os testes automatizados
        run: pytest
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}

      - name: Formatar c√≥digo com black e isort
        run: |
          black .
          isort .

      - name: Commit e push de ajustes de formata√ß√£o
        run: |
          git config --global user.name "formatter-bot"
          git config --global user.email "formatter@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ C√≥digo j√° formatado. Nenhum commit necess√°rio."
          else
            git commit -m "üßπ Ajustes autom√°ticos de formata√ß√£o (black + isort)"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Gerar README com estrutura + Mermaid
        run: python atualizar_readme_estrutura.py
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}

      - name: Commit e push do novo README se houver mudan√ßas
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add README.md
          if git diff --cached --quiet; then
            echo "‚úÖ Nenhuma mudan√ßa detectada no README.md"
          else
            git commit -m "üìÑ Atualiza√ß√£o autom√°tica do README com Mermaid e estrutura [bot]"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}