import json
from typing import List, Literal, Optional

# Nenhuma mudan√ßa aqui
from pydantic import BaseModel, Field
from langchain_ollama import ChatOllama
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import JsonOutputParser

# --- ESTRUTURA Pydantic (sem altera√ß√µes) ---
class Intervencao(BaseModel):
    ordem_temporal: int = Field(description="Ordem que a interven√ß√£o aparece no texto")
    nome_comercial: Optional[str] = Field(description="Nome comercial do produto")
    principio_ativo: Optional[str] = Field(description="Princ√≠pio ativo do medicamento, se conhecido")
    escala_eficacia: Optional[Literal["Melhora total", "Melhora significativa", "Melhora parcial", "Sem efeito", "Piora"]] = Field(description="Efic√°cia percebida pelo paciente")
    comentario_extraido: Optional[str] = Field(description="Coment√°rio literal do paciente sobre a interven√ß√£o")
    trecho_referente: str = Field(description="Trecho exato do texto que comprova os dados")

class AnaliseRelato(BaseModel):
    raciocinio: str = Field(description="Racioc√≠nio passo a passo sobre como o relato foi analisado para preencher os campos.")
    tags: List[str] = Field(description="Palavras-chave ou temas citados no relato")
    microdepoimento: str = Field(description="Uma frase √∫til e clara que resume a experi√™ncia do paciente")
    intervencoes: List[Intervencao]

# --- Fun√ß√£o da Cadeia (com o prompt simplificado) ---
def criar_cadeia_analise_local(output_schema: BaseModel, nome_modelo_ollama: str= "poc-gemma-gaia"):
    parser = JsonOutputParser(pydantic_object=output_schema)

    # --- CORRE√á√ÉO PRINCIPAL: Prompt muito mais simples ---
    # Removemos a inje√ß√£o do {formato_json} e descrevemos a sa√≠da de forma mais direta.
    prompt_template = """
    Voc√™ √© um **{persona}** no contexto **{contexto}**. Sua tarefa √© **{acao_necessaria}** sobre o relato a seguir, que est√° entre as tags <relato>.
    <relato>
    {conteudo}
    </relato>
    Com base nesse texto, gere um **JSON**, respondendo APENAS isso, com os seguintes campos, e 'null' quando n√£o for poss√≠vel:

        {{  
            "tags": ["palavras-chave ou temas citados no relato"],
            "microdepoimento": "uma frase √∫til e clara que resume a experi√™ncia do paciente",
            "tituloRelato": "um t√≠tulo curto e descritivo do relato, como 'Tratamento com pomada de cal√™ndula'",
             "paciente":    {{
                                "idade_descrita": "...", # inferir do texto ou 'null'
                                "sexo_biologico": "...", # inferir do texto ou 'null'
                                "faixa_etaria_calculada": # beb√™, crianca, adolescente, adulto, idoso ou 'null'
                            }},
            "quadro_clinico": 
                            {{
                                "sintomas_descritos": [...], # Lista de sintomas mencionados
                                "localizacao_lesoes": [...], # Partes do corpo afetadas
                                "severidade_percebida": .., # alta, baixa, media ou null
                                "gatilhos_mencionados": ["alimenta√ß√£o, ..."], # O que piora ou desencadeia as crises
                                "duracao_crise": ... # Se o texto mencionasse a duracao, ou null
                            }},
            "racionio": "...", # Racioc√≠nio passo a passo sobre como o relato foi analisado para preencher os campos.				
            "intervencoes_medicamentos": [
                        {{
                        "nome_comercial": "...",
                        "principio_ativo": "...",
                        "forma_farmaceutica": "...",
                        "via_de_administracao": "...",
                        "tempo_uso": "...",
                        "frequencia_uso": "...",
                        "eficacia_percebida": "...", # Melhora, Piora, inconclusivo, null
                        "efeitos_colaterais": ["..."],
                        "comentario_extraido": "...",
                        "trecho_referente": "...",
                        "tipo_intervencao": "...",
                        "cid10_relacionado": [...], # CID10 da doen√ßa se poss√≠vel ou []
                        "ordem_temporal": 0, # Ordem que a interven√ß√£o aparece no texto.ex: 1, 2,...
                        
                        }},
                        ...
                    ]
        }}
                
                Retorne somente um JSON puro. N√£o use ```json ou qualquer formata√ß√£o de markdown.
            """
    # --- FIM DA CORRE√á√ÉO PRINCIPAL ---
    # O ChatPromptTemplate n√£o precisa mais de partial_variables, pois removemos {formato_json}
    print("üîç Criando cadeia de an√°lise com o modelo:", nome_modelo_ollama)
   

    prompt = ChatPromptTemplate.from_template(template=prompt_template)
    
    model = ChatOllama(
        model=nome_modelo_ollama,
        format="json",
        temperature=0.0
    )

    chain = prompt | model | parser
    return chain

# --- Execu√ß√£o (sem altera√ß√µes) ---
meu_modelo_gemma = "llama-poc"

persona_arg = "ANALISTA DE DADOS CL√çNICOS especialista em extra√ß√£o de informa√ß√µes de textos n√£o estruturados"
contexto_arg = "dermatologia e farmacovigil√¢ncia popular" # Esta vari√°vel n√£o √© mais usada no novo prompt, mas mantemos por consist√™ncia
acao_necessaria_arg = "extrair informa√ß√µes estruturadas sobre tratamentos de dermatite at√≥pica"
conteudo_arg = """
dermatite at√≥pica grave antes e depois Desde pequena tenho isso, mas sempre falaram que era alergia tenho rinite. Passei quase 20 anos da minha vida com coceiras,feridas e desconforto. Essa semana recebi diagn√≥stico de escabiose sarna, tomei as medica√ß√µes por√©m s√≥ piorou. Fui antes de ontem novamente ao hospital e o m√©dico disse que ia m hip√≥tese alguma era sarna, √© dermatite at√≥pica grave. Receitou prednisona, cefalexina e uma pomada de acetato de dexametasona. Ainda n√£o t√° t√£o melhor pois hoje √© o segundo dia da medica√ß√£o, por√©m a coceira j√° diminui drasticamente e agora est√° secando. Pra quem ficou 20 anos sofrendo sem saber exatamente o que era, ver as feridas melhorando √© muito animador.
"""

cadeia_de_analise = criar_cadeia_analise_local(
    output_schema=AnaliseRelato,
    nome_modelo_ollama=meu_modelo_gemma
)

print("Invocando o modelo local via Ollama... Isso pode levar um momento.")

resultado = cadeia_de_analise.invoke({
    "persona": persona_arg,
    "contexto": contexto_arg,
    "acao_necessaria": acao_necessaria_arg,
    "conteudo": conteudo_arg
})

print("\n--- RESULTADO DA EXTRA√á√ÉO ---")
print(json.dumps(resultado, indent=2, ensure_ascii=False))